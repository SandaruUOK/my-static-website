name: Deploy to Google Cloud Storage

# Trigger the workflow on push to main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository code
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Authenticate to Google Cloud (Updated method)
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    # Setup Google Cloud SDK
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: my-static-website-467508
        
    # Verify Authentication (Optional but helpful for debugging)
    - name: Verify Authentication
      run: |
        gcloud auth list
        gcloud config get-value project
        
    # Optional: Setup Node.js if you have build process
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    # Optional: Install dependencies and build
    # Uncomment if you add build process later
    # - name: Install dependencies
    #   run: npm install
    #   
    # - name: Build project
    #   run: npm run build
      
    # Deploy to Google Cloud Storage
    - name: Deploy to Google Cloud Storage
      run: |
        # Set bucket name (use a fixed name for your website)
        BUCKET_NAME="my-static-website-bucket"
        
        # Create bucket if it doesn't exist (will skip if exists)
        gsutil mb gs://${BUCKET_NAME} || echo "Bucket already exists"
        
        # Configure bucket for website hosting
        gsutil web set -m index.html -e 404.html gs://${BUCKET_NAME}
        
        # Make bucket publicly readable
        gsutil iam ch allUsers:objectViewer gs://${BUCKET_NAME}
        
        # Remove old files from bucket (optional - for clean deployment)
        gsutil -m rm -r gs://${BUCKET_NAME}/* || true
        
        # Upload new files (exclude unnecessary files during upload)
        gsutil -m cp -r \
          --exclude=".git/*" \
          --exclude=".github/*" \
          --exclude="*.md" \
          --exclude="package*.json" \
          --exclude="*.sh" \
          --exclude="gcp-key.json" \
          . gs://${BUCKET_NAME}/
        
        # Set cache control for different file types
        gsutil -m setmeta -h "Cache-Control:public, max-age=31536000" gs://${BUCKET_NAME}/*.css || true
        gsutil -m setmeta -h "Cache-Control:public, max-age=31536000" gs://${BUCKET_NAME}/*.js || true
        gsutil -m setmeta -h "Cache-Control:public, max-age=31536000" gs://${BUCKET_NAME}/*.png || true
        gsutil -m setmeta -h "Cache-Control:public, max-age=31536000" gs://${BUCKET_NAME}/*.jpg || true
        gsutil -m setmeta -h "Cache-Control:public, max-age=0, must-revalidate" gs://${BUCKET_NAME}/*.html || true
        
    # Optional: Invalidate CDN cache (if you set up Cloud CDN later)
    # - name: Invalidate CDN Cache
    #   run: |
    #     gcloud compute url-maps invalidate-cdn-cache ${{ secrets.CDN_URL_MAP }} \
    #       --path "/*"
      
    # Output website URL
    - name: Website URL
      run: |
        BUCKET_NAME="my-static-website-bucket"
        echo "üåê Website deployed successfully!"
        echo "üìç Direct URL: https://storage.googleapis.com/${BUCKET_NAME}/index.html"
        echo "üìç Website URL: https://${BUCKET_NAME}.storage.googleapis.com"
        echo "üìç Custom domain URL (if configured): https://your-domain.com"
